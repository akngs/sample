name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Find the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # If there's no previous tag, get all commits
          if [ -z "$PREVIOUS_TAG" ]; then
            CHANGES=$(git log --pretty=format:"* %s (%h)")
          else
            CHANGES=$(git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..HEAD)
          fi
          
          # Properly escape the output for GitHub Actions
          CHANGES="${CHANGES//'%'/'%25'}"
          CHANGES="${CHANGES//$'\n'/'%0A'}"
          CHANGES="${CHANGES//$'\r'/'%0D'}"
          
          # Set the output
          echo "CHANGELOG=$CHANGES" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            Release ${{ github.ref_name }} of sample CLI tool
            
            ## Changes
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## Installation
            
            Download the appropriate binary for your platform and add it to your PATH.